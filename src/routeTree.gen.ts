/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UnauthenticatedRouteImport } from './routes/_unauthenticated'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UnauthenticatedSignupRouteImport } from './routes/_unauthenticated/signup'
import { Route as UnauthenticatedLoginRouteImport } from './routes/_unauthenticated/login'
import { Route as AuthenticatedApplayoutRouteImport } from './routes/_authenticated/_applayout'
import { Route as AuthenticatedApplayoutAdminRouteImport } from './routes/_authenticated/_applayout/_admin'
import { Route as AuthenticatedApplayoutCoursesIndexRouteImport } from './routes/_authenticated/_applayout/courses/index'
import { Route as AuthenticatedApplayoutCoursesCourseIdRouteImport } from './routes/_authenticated/_applayout/courses/$courseId'
import { Route as AuthenticatedApplayoutAdminAdminDashboardRouteImport } from './routes/_authenticated/_applayout/_admin/admin-dashboard'

const UnauthenticatedRoute = UnauthenticatedRouteImport.update({
  id: '/_unauthenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UnauthenticatedSignupRoute = UnauthenticatedSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => UnauthenticatedRoute,
} as any)
const UnauthenticatedLoginRoute = UnauthenticatedLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => UnauthenticatedRoute,
} as any)
const AuthenticatedApplayoutRoute = AuthenticatedApplayoutRouteImport.update({
  id: '/_applayout',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedApplayoutAdminRoute =
  AuthenticatedApplayoutAdminRouteImport.update({
    id: '/_admin',
    getParentRoute: () => AuthenticatedApplayoutRoute,
  } as any)
const AuthenticatedApplayoutCoursesIndexRoute =
  AuthenticatedApplayoutCoursesIndexRouteImport.update({
    id: '/courses/',
    path: '/courses/',
    getParentRoute: () => AuthenticatedApplayoutRoute,
  } as any)
const AuthenticatedApplayoutCoursesCourseIdRoute =
  AuthenticatedApplayoutCoursesCourseIdRouteImport.update({
    id: '/courses/$courseId',
    path: '/courses/$courseId',
    getParentRoute: () => AuthenticatedApplayoutRoute,
  } as any)
const AuthenticatedApplayoutAdminAdminDashboardRoute =
  AuthenticatedApplayoutAdminAdminDashboardRouteImport.update({
    id: '/admin-dashboard',
    path: '/admin-dashboard',
    getParentRoute: () => AuthenticatedApplayoutAdminRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof UnauthenticatedLoginRoute
  '/signup': typeof UnauthenticatedSignupRoute
  '/admin-dashboard': typeof AuthenticatedApplayoutAdminAdminDashboardRoute
  '/courses/$courseId': typeof AuthenticatedApplayoutCoursesCourseIdRoute
  '/courses': typeof AuthenticatedApplayoutCoursesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof UnauthenticatedLoginRoute
  '/signup': typeof UnauthenticatedSignupRoute
  '/admin-dashboard': typeof AuthenticatedApplayoutAdminAdminDashboardRoute
  '/courses/$courseId': typeof AuthenticatedApplayoutCoursesCourseIdRoute
  '/courses': typeof AuthenticatedApplayoutCoursesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_unauthenticated': typeof UnauthenticatedRouteWithChildren
  '/_authenticated/_applayout': typeof AuthenticatedApplayoutRouteWithChildren
  '/_unauthenticated/login': typeof UnauthenticatedLoginRoute
  '/_unauthenticated/signup': typeof UnauthenticatedSignupRoute
  '/_authenticated/_applayout/_admin': typeof AuthenticatedApplayoutAdminRouteWithChildren
  '/_authenticated/_applayout/_admin/admin-dashboard': typeof AuthenticatedApplayoutAdminAdminDashboardRoute
  '/_authenticated/_applayout/courses/$courseId': typeof AuthenticatedApplayoutCoursesCourseIdRoute
  '/_authenticated/_applayout/courses/': typeof AuthenticatedApplayoutCoursesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/admin-dashboard'
    | '/courses/$courseId'
    | '/courses'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/admin-dashboard'
    | '/courses/$courseId'
    | '/courses'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_unauthenticated'
    | '/_authenticated/_applayout'
    | '/_unauthenticated/login'
    | '/_unauthenticated/signup'
    | '/_authenticated/_applayout/_admin'
    | '/_authenticated/_applayout/_admin/admin-dashboard'
    | '/_authenticated/_applayout/courses/$courseId'
    | '/_authenticated/_applayout/courses/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  UnauthenticatedRoute: typeof UnauthenticatedRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_unauthenticated': {
      id: '/_unauthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_unauthenticated/signup': {
      id: '/_unauthenticated/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof UnauthenticatedSignupRouteImport
      parentRoute: typeof UnauthenticatedRoute
    }
    '/_unauthenticated/login': {
      id: '/_unauthenticated/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnauthenticatedLoginRouteImport
      parentRoute: typeof UnauthenticatedRoute
    }
    '/_authenticated/_applayout': {
      id: '/_authenticated/_applayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedApplayoutRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/_applayout/_admin': {
      id: '/_authenticated/_applayout/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedApplayoutAdminRouteImport
      parentRoute: typeof AuthenticatedApplayoutRoute
    }
    '/_authenticated/_applayout/courses/': {
      id: '/_authenticated/_applayout/courses/'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof AuthenticatedApplayoutCoursesIndexRouteImport
      parentRoute: typeof AuthenticatedApplayoutRoute
    }
    '/_authenticated/_applayout/courses/$courseId': {
      id: '/_authenticated/_applayout/courses/$courseId'
      path: '/courses/$courseId'
      fullPath: '/courses/$courseId'
      preLoaderRoute: typeof AuthenticatedApplayoutCoursesCourseIdRouteImport
      parentRoute: typeof AuthenticatedApplayoutRoute
    }
    '/_authenticated/_applayout/_admin/admin-dashboard': {
      id: '/_authenticated/_applayout/_admin/admin-dashboard'
      path: '/admin-dashboard'
      fullPath: '/admin-dashboard'
      preLoaderRoute: typeof AuthenticatedApplayoutAdminAdminDashboardRouteImport
      parentRoute: typeof AuthenticatedApplayoutAdminRoute
    }
  }
}

interface AuthenticatedApplayoutAdminRouteChildren {
  AuthenticatedApplayoutAdminAdminDashboardRoute: typeof AuthenticatedApplayoutAdminAdminDashboardRoute
}

const AuthenticatedApplayoutAdminRouteChildren: AuthenticatedApplayoutAdminRouteChildren =
  {
    AuthenticatedApplayoutAdminAdminDashboardRoute:
      AuthenticatedApplayoutAdminAdminDashboardRoute,
  }

const AuthenticatedApplayoutAdminRouteWithChildren =
  AuthenticatedApplayoutAdminRoute._addFileChildren(
    AuthenticatedApplayoutAdminRouteChildren,
  )

interface AuthenticatedApplayoutRouteChildren {
  AuthenticatedApplayoutAdminRoute: typeof AuthenticatedApplayoutAdminRouteWithChildren
  AuthenticatedApplayoutCoursesCourseIdRoute: typeof AuthenticatedApplayoutCoursesCourseIdRoute
  AuthenticatedApplayoutCoursesIndexRoute: typeof AuthenticatedApplayoutCoursesIndexRoute
}

const AuthenticatedApplayoutRouteChildren: AuthenticatedApplayoutRouteChildren =
  {
    AuthenticatedApplayoutAdminRoute:
      AuthenticatedApplayoutAdminRouteWithChildren,
    AuthenticatedApplayoutCoursesCourseIdRoute:
      AuthenticatedApplayoutCoursesCourseIdRoute,
    AuthenticatedApplayoutCoursesIndexRoute:
      AuthenticatedApplayoutCoursesIndexRoute,
  }

const AuthenticatedApplayoutRouteWithChildren =
  AuthenticatedApplayoutRoute._addFileChildren(
    AuthenticatedApplayoutRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedApplayoutRoute: typeof AuthenticatedApplayoutRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedApplayoutRoute: AuthenticatedApplayoutRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface UnauthenticatedRouteChildren {
  UnauthenticatedLoginRoute: typeof UnauthenticatedLoginRoute
  UnauthenticatedSignupRoute: typeof UnauthenticatedSignupRoute
}

const UnauthenticatedRouteChildren: UnauthenticatedRouteChildren = {
  UnauthenticatedLoginRoute: UnauthenticatedLoginRoute,
  UnauthenticatedSignupRoute: UnauthenticatedSignupRoute,
}

const UnauthenticatedRouteWithChildren = UnauthenticatedRoute._addFileChildren(
  UnauthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  UnauthenticatedRoute: UnauthenticatedRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
